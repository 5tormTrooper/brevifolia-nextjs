{"version":3,"file":"static/webpack/static/development/pages/index.js.78dd6650a8a47796f4e3.hot-update.js","sources":["webpack:///./components/BlogList.js"],"sourcesContent":["import Link from \"next/link\";\nimport blogListStyles from \"../styles/components/bloglist.scss\";\nimport matter from \"gray-matter\";\nimport { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst BlogList = () => {\n  function getPosts() {\n    const posts = (ctx => {\n      const keys = ctx.keys();\n      const values = keys.map(ctx);\n      const data = keys.map((key, index) => {\n        // Create slug from filename\n        const slug = key\n          .replace(/^.*[\\\\\\/]/, \"\")\n          .split(\".\")\n          .slice(0, -1)\n          .join(\".\");\n        const value = values[index];\n        // Parse document\n        const document = matter(value.default);\n        return {\n          document,\n          slug\n        };\n      });\n      return data;\n    })(require.context(\"../posts\", true, /\\.md$/));\n    return posts;\n  }\n  function truncateSummary(content) {\n    let summary = content.slice(0, 200).trimEnd();\n    return summary;\n  }\n  function renderPosts(posts) {\n    console.log(posts);\n    return posts.map(post => (\n      <Link\n        key={post.slug}\n        href={{ pathname: \"/blog\", query: { id: post.slug } }}\n      >\n        <li className={blogListStyles.li}>\n          <div className={blogListStyles.hero_image}>\n            <img src={post.document.data.hero_image} />\n          </div>\n          <div className={blogListStyles.blog__info}>\n            <h1>{post.document.data.title}</h1>\n            <h3> {post.document.data.date}</h3>\n            <ReactMarkdown source={truncateSummary(post.document.content)} />\n          </div>\n        </li>\n      </Link>\n    ));\n  }\n  const [posts] = useState(getPosts());\n  return (\n    <ul className={blogListStyles.list}>\n      {posts.length > 1 && renderPosts(posts)}\n    </ul>\n  );\n};\n\nexport default BlogList;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAiBA;AACA;AAhDA;AAAA;AAAA;AACA;AAgDA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}