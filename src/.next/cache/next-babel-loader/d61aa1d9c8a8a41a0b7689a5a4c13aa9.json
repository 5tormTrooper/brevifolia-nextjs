{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kendallstrautman/Forestry/initial-project/starter-blog-next/src/components/BlogList.js\";\nimport React from \"react\";\nimport Link from \"next/link\";\nimport blogListStyles from \"../styles/components/bloglist.module.scss\";\nimport matter from \"gray-matter\";\nimport { useState } from \"react\";\n\nvar BlogList = function BlogList() {\n  function getPosts() {\n    var posts = function (ctx) {\n      var keys = ctx.keys();\n      var values = keys.map(ctx);\n      var data = keys.map(function (key, index) {\n        // Create slug from filename\n        var slug = key.replace(/^.*[\\\\\\/]/, \"\").split(\".\").slice(0, -1).join(\".\");\n        var value = values[index]; // Parse document\n\n        var document = matter(value[\"default\"]);\n        return {\n          document: document,\n          slug: slug\n        };\n      });\n      return data;\n    }(require.context(\"../content/posts\", true, /\\.md$/));\n\n    console.log(posts);\n    return posts;\n  }\n\n  function renderPosts(posts) {\n    return posts.map(function (post) {\n      return React.createElement(Link, {\n        key: post.slug,\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: blogListStyles.li,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, post.document.data.title));\n    });\n  }\n\n  var _useState = useState(getPosts()),\n      _useState2 = _slicedToArray(_useState, 1),\n      posts = _useState2[0];\n\n  return React.createElement(\"ul\", {\n    className: blogListStyles.list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, posts.length > 1 && renderPosts(posts));\n};\n\n{}\n/* <Link href=\"/\">\n      <li className={blogListStyles.li}>\n        <div className={blogListStyles.hero_image}>\n          <img src=\"https://source.unsplash.com/random\" />\n        </div>\n        <div className={blogListStyles.blog__info}>\n          <h1>Blog Title</h1>\n          <h3> July 07, 1992</h3>\n          <p>Blog summary</p>\n        </div>\n      </li>\n    </Link> */\n// BlogList.getInitialProps = async function() {\n//   // Get posts from folder\n//   const posts = (ctx => {\n//     const keys = ctx.keys();\n//     const values = keys.map(ctx);\n//     const data = keys.map((key, index) => {\n//       // Create slug from filename\n//       const slug = key\n//         .replace(/^.*[\\\\\\/]/, \"\")\n//         .split(\".\")\n//         .slice(0, -1)\n//         .join(\".\");\n//       const value = values[index];\n//       // Parse document\n//       const document = matter(value);\n//       return {\n//         document,\n//         slug\n//       };\n//     });\n//     return data;\n//   })(require.context(\"../content/posts\", true, /\\.md$/));\n//   return {\n//     posts\n//   };\n// };\n\nexport default BlogList;","map":{"version":3,"sources":["/Users/kendallstrautman/Forestry/initial-project/starter-blog-next/src/components/BlogList.js"],"names":["Link","blogListStyles","matter","useState","BlogList","getPosts","posts","ctx","keys","values","map","data","key","index","slug","replace","split","slice","join","value","document","require","context","console","log","renderPosts","post","li","title","list","length"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,cAAP,MAA2B,2CAA3B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,WAASC,QAAT,GAAoB;AAClB,QAAMC,KAAK,GAAI,UAAAC,GAAG,EAAI;AACpB,UAAMC,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAb;AACA,UAAMC,MAAM,GAAGD,IAAI,CAACE,GAAL,CAASH,GAAT,CAAf;AACA,UAAMI,IAAI,GAAGH,IAAI,CAACE,GAAL,CAAS,UAACE,GAAD,EAAMC,KAAN,EAAgB;AACpC;AACA,YAAMC,IAAI,GAAGF,GAAG,CACbG,OADU,CACF,WADE,EACW,EADX,EAEVC,KAFU,CAEJ,GAFI,EAGVC,KAHU,CAGJ,CAHI,EAGD,CAAC,CAHA,EAIVC,IAJU,CAIL,GAJK,CAAb;AAKA,YAAMC,KAAK,GAAGV,MAAM,CAACI,KAAD,CAApB,CAPoC,CAQpC;;AACA,YAAMO,QAAQ,GAAGlB,MAAM,CAACiB,KAAK,WAAN,CAAvB;AACA,eAAO;AACLC,UAAAA,QAAQ,EAARA,QADK;AAELN,UAAAA,IAAI,EAAJA;AAFK,SAAP;AAID,OAdY,CAAb;AAeA,aAAOH,IAAP;AACD,KAnBa,CAmBXU,OAAO,CAACC,OAAR,CAAgB,kBAAhB,EAAoC,IAApC,EAA0C,OAA1C,CAnBW,CAAd;;AAoBAC,IAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AACA,WAAOA,KAAP;AACD;;AACD,WAASmB,WAAT,CAAqBnB,KAArB,EAA4B;AAC1B,WAAOA,KAAK,CAACI,GAAN,CAAU,UAAAgB,IAAI;AAAA,aACnB,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,IAAI,CAACZ,IAAhB;AAAsB,QAAA,IAAI,EAAC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAEb,cAAc,CAAC0B,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmCD,IAAI,CAACN,QAAL,CAAcT,IAAd,CAAmBiB,KAAtD,CADF,CADmB;AAAA,KAAd,CAAP;AAKD;;AA/BoB,kBAgCLzB,QAAQ,CAACE,QAAQ,EAAT,CAhCH;AAAA;AAAA,MAgCdC,KAhCc;;AAiCrB,SACE;AAAI,IAAA,SAAS,EAAEL,cAAc,CAAC4B,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,KAAK,CAACwB,MAAN,GAAe,CAAf,IAAoBL,WAAW,CAACnB,KAAD,CADlC,CADF;AAKD,CAtCD;;AAwCA,CAaC;AAZC;;;;;;;;;;;;AAaF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeF,QAAf","sourcesContent":["import Link from \"next/link\";\nimport blogListStyles from \"../styles/components/bloglist.module.scss\";\nimport matter from \"gray-matter\";\nimport { useState } from \"react\";\n\nconst BlogList = () => {\n  function getPosts() {\n    const posts = (ctx => {\n      const keys = ctx.keys();\n      const values = keys.map(ctx);\n      const data = keys.map((key, index) => {\n        // Create slug from filename\n        const slug = key\n          .replace(/^.*[\\\\\\/]/, \"\")\n          .split(\".\")\n          .slice(0, -1)\n          .join(\".\");\n        const value = values[index];\n        // Parse document\n        const document = matter(value.default);\n        return {\n          document,\n          slug\n        };\n      });\n      return data;\n    })(require.context(\"../content/posts\", true, /\\.md$/));\n    console.log(posts);\n    return posts;\n  }\n  function renderPosts(posts) {\n    return posts.map(post => (\n      <Link key={post.slug} href=\"/\">\n        <li className={blogListStyles.li}>{post.document.data.title}</li>\n      </Link>\n    ));\n  }\n  const [posts] = useState(getPosts());\n  return (\n    <ul className={blogListStyles.list}>\n      {posts.length > 1 && renderPosts(posts)}\n    </ul>\n  );\n};\n\n{\n  /* <Link href=\"/\">\n        <li className={blogListStyles.li}>\n          <div className={blogListStyles.hero_image}>\n            <img src=\"https://source.unsplash.com/random\" />\n          </div>\n          <div className={blogListStyles.blog__info}>\n            <h1>Blog Title</h1>\n            <h3> July 07, 1992</h3>\n            <p>Blog summary</p>\n          </div>\n        </li>\n      </Link> */\n}\n// BlogList.getInitialProps = async function() {\n//   // Get posts from folder\n//   const posts = (ctx => {\n//     const keys = ctx.keys();\n//     const values = keys.map(ctx);\n//     const data = keys.map((key, index) => {\n//       // Create slug from filename\n//       const slug = key\n//         .replace(/^.*[\\\\\\/]/, \"\")\n//         .split(\".\")\n//         .slice(0, -1)\n//         .join(\".\");\n//       const value = values[index];\n//       // Parse document\n//       const document = matter(value);\n//       return {\n//         document,\n//         slug\n//       };\n//     });\n//     return data;\n//   })(require.context(\"../content/posts\", true, /\\.md$/));\n//   return {\n//     posts\n//   };\n// };\n\nexport default BlogList;\n"]},"metadata":{},"sourceType":"module"}