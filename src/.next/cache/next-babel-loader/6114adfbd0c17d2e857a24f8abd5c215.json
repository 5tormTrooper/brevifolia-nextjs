{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kendallstrautman/Forestry/initial-project/starter-blog-next/src/components/Layout.js\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport data from \"../../config.json\";\nimport layoutStyles from \"../styles/components/layout.scss\";\nimport Router from 'next/router';\nimport { useState } from 'react';\nexport default function Layout(props) {\n  // const isInfo = router.pathname === '/info'\n  var _useState = useState('inherit'),\n      _useState2 = _slicedToArray(_useState, 2),\n      bgColor = _useState2[0],\n      setBgColor = _useState2[1];\n\n  var _useState3 = useState('inherit'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      typeColor = _useState4[0],\n      setTypeColor = _useState4[1];\n\n  function isInfoPage() {\n    if (Router.pathname == \"/info\") {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function setColor() {\n    if (isInfoPage()) {\n      setBgColor(data.primary_color);\n      setTypeColor(\"#fff\");\n    } else {\n      setBgColor(\"inherit\");\n      setTypeColor(\"inherit\");\n    }\n  }\n\n  return React.createElement(\"section\", {\n    className: \"\".concat(layoutStyles.layout, \" \").concat(typeof window !== \"undefined\" && Router.pathname == \"/info\" && layoutStyles.info_page),\n    style: {\n      backgroundColor: \"\".concat(typeof window !== \"undefined\" && Router.pathname == \"/info\" && data.primary_color)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: layoutStyles.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, props.children));\n}","map":{"version":3,"sources":["/Users/kendallstrautman/Forestry/initial-project/starter-blog-next/src/components/Layout.js"],"names":["Header","data","layoutStyles","Router","useState","Layout","props","bgColor","setBgColor","typeColor","setTypeColor","isInfoPage","pathname","setColor","primary_color","layout","window","info_page","backgroundColor","content","children"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACpC;AADoC,kBAENF,QAAQ,CAAC,SAAD,CAFF;AAAA;AAAA,MAE7BG,OAF6B;AAAA,MAEpBC,UAFoB;;AAAA,mBAGFJ,QAAQ,CAAC,SAAD,CAHN;AAAA;AAAA,MAG7BK,SAH6B;AAAA,MAGlBC,YAHkB;;AAIpC,WAASC,UAAT,GAAsB;AACpB,QAAGR,MAAM,CAACS,QAAP,IAAmB,OAAtB,EAA+B;AAC7B,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACF;;AACD,WAASC,QAAT,GAAoB;AAClB,QAAGF,UAAU,EAAb,EAAiB;AACfH,MAAAA,UAAU,CAACP,IAAI,CAACa,aAAN,CAAV;AACAJ,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACD,KAHD,MAGO;AACLF,MAAAA,UAAU,CAAC,SAAD,CAAV;AACAE,MAAAA,YAAY,CAAC,SAAD,CAAZ;AACD;AACF;;AACD,SACE;AACI,IAAA,SAAS,YAAKR,YAAY,CAACa,MAAlB,cAA4B,OAAOC,MAAP,KAAkB,WAAlB,IACnCb,MAAM,CAACS,QAAP,IAAmB,OADgB,IAEnCV,YAAY,CAACe,SAFN,CADb;AAII,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,YAAK,OAAOF,MAAP,KAAkB,WAAlB,IACpBb,MAAM,CAACS,QAAP,IAAmB,OADC,IAEpBX,IAAI,CAACa,aAFU;AADV,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE;AAAK,IAAA,SAAS,EAAEZ,YAAY,CAACiB,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCb,KAAK,CAACc,QAA7C,CAXF,CADF;AAeD","sourcesContent":["import Header from \"./Header\";\nimport data from \"../../config.json\";\nimport layoutStyles from \"../styles/components/layout.scss\";\nimport Router from 'next/router'\nimport {useState} from 'react'\n\nexport default function Layout(props) {\n  // const isInfo = router.pathname === '/info'\n  const [bgColor, setBgColor] = useState('inherit')\n  const [typeColor, setTypeColor] = useState('inherit')\n  function isInfoPage() {\n    if(Router.pathname == \"/info\") {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  function setColor() {\n    if(isInfoPage()) {\n      setBgColor(data.primary_color)\n      setTypeColor(\"#fff\")\n    } else {\n      setBgColor(\"inherit\")\n      setTypeColor(\"inherit\")\n    }\n  }\n  return (\n    <section\n        className={`${layoutStyles.layout} ${typeof window !== \"undefined\" &&\n          Router.pathname == \"/info\" &&\n          layoutStyles.info_page}`}\n        style={{\n          backgroundColor: `${typeof window !== \"undefined\" &&\n          Router.pathname == \"/info\" && \n          data.primary_color}`\n  }}\n    >\n      <Header />\n      <div className={layoutStyles.content}>{props.children}</div>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}